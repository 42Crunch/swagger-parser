{
  "swagger" : "2.0",
  "paths" : {
    "/health" : {
      "get" : {
        "summary" : "Returns server health information",
        "operationId" : "getHealth",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "param3",
          "in" : "path",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "param4",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/health"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Health information from the server",
            "schema" : {
              "$ref" : "#/definitions/health"
            }
          },
          "400" : {
            "description" : "Your request was not valid",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          },
          "500" : {
            "description" : "An unexpected error occur during processing",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "param1",
        "in" : "query",
        "required" : false,
        "type" : "string"
      }, {
        "name" : "param2",
        "in" : "header",
        "required" : false,
        "type" : "string"
      } ]
    }
  },
  "definitions" : {
    "refInDefinitions" : {
      "type" : "object",
      "properties" : {
        "foo" : {
          "type" : "string"
        },
        "bar" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "The example model"
    },
    "arrayModel" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/foo"
      }
    },
    "composedCat" : {
      "allOf" : [ {
        "$ref" : "#/definitions/pet"
      }, {
        "$ref" : "#/definitions/foo1"
      }, {
        "required" : [ "huntingSkill" ],
        "properties" : {
          "huntingSkill" : {
            "type" : "string",
            "description" : "The measured skill for hunting",
            "default" : "lazy",
            "enum" : [ "clueless", "lazy", "adventurous", "aggressive" ]
          },
          "prop2" : {
            "$ref" : "#/definitions/foo"
          },
          "reflexes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/reflex"
            }
          },
          "reflexMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/definitions/reflex"
            }
          }
        }
      } ]
    },
    "health" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string"
        },
        "cpuUtilization" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "The health model"
    },
    "error" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      },
      "description" : "The error model"
    },
    "pet" : {
      "required" : [ "name", "petType" ],
      "discriminator" : "petType",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "petType" : {
          "type" : "string"
        }
      }
    },
    "foo" : {
      "type" : "object",
      "properties" : {
        "hello" : {
          "type" : "string"
        },
        "world" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "Just another model"
    },
    "reflex" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "speedInMilliseconds" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "foo1" : {
      "type" : "object",
      "properties" : {
        "hello1" : {
          "type" : "string"
        },
        "world2" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "description" : "A model that will generate an intentional name conflict with foo.json"
    }
  }
}